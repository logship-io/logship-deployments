version: "3.9"
services:
  logship-database:
    container_name: "logship-database"
    image: ghcr.io/logsink/logship-database:latest
    network_mode: host
    restart: always
    volumes:
      - ./config/logship-database/appsettings.production.json:/app/appsettings.production.json:ro
      - ${LS_KEYVALUE_DATA_PATH}:/logship/kvs
  logship-backend:
    container_name: "logship-backend"
    image: ghcr.io/logsink/logship-backend:latest
    network_mode: host
    restart: always
    volumes:
      - ./config/logship-backend/appsettings.production.json:/app/appsettings.production.json:ro
      - ${LS_SEARCH_DATA_PATH}:/logship/searchdata
  logship-agent:
    container_name: "logship-agent"
    image: ghcr.io/logsink/logship-agent:latest
    network_mode: host
    restart: always
    volumes:
      - /var/log/journal:/var/log/journal
      - /proc:/proc
      - ./config/logship-agent/appsettings.json:/app/appsettings.json:ro
  logship-grafana-datasource:
    container_name: "logship-grafana-datasource"
    image: ghcr.io/logsink/grafana-logship-datasource:latest
    restart: always
    network_mode: host
    volumes:
      - ${LS_GRAPHANA_DATA_PATH}:/var/lib/grafana
      - ./config/logship-grafana-datasource/config.yaml:/etc/grafana/provisioning/datasources/default.yaml:ro
  logship-frontend:
    container_name: "logship-frontend"
    image: ghcr.io/logsink/logship-frontend:latest
    restart: always
    network_mode: host
    volumes:
      - ./config/logship-frontend/config.yaml:/etc/grafana/provisioning/datasources/default.yaml:ro
  logship-frontdoor:
    container_name: "logship-frontdoor"
    image: nginx
    restart: always
    network_mode: host
    volumes:
      - ${LS_NGINX_CONFIGURATION}:/etc/nginx/ssl
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
